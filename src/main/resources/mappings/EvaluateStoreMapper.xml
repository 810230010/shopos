<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliangit.shopos.dao.EvaluateStoreMapper" >
  <resultMap id="BaseResultMap" type="com.wuliangit.shopos.entity.EvaluateStore" >
    <id column="seval_id" property="sevalId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="desc_credit" property="descCredit" jdbcType="INTEGER" />
    <result column="service_credit" property="serviceCredit" jdbcType="INTEGER" />
    <result column="delivery_credit" property="deliveryCredit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    seval_id, order_id, order_no, create_time, store_id, store_name, member_id, member_name, 
    desc_credit, service_credit, delivery_credit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_evaluate_store
    where seval_id = #{sevalId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_evaluate_store
    where seval_id = #{sevalId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wuliangit.shopos.entity.EvaluateStore" >
    insert into t_evaluate_store (seval_id, order_id, order_no, 
      create_time, store_id, store_name, 
      member_id, member_name, desc_credit, 
      service_credit, delivery_credit)
    values (#{sevalId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{storeName,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{descCredit,jdbcType=INTEGER}, 
      #{serviceCredit,jdbcType=INTEGER}, #{deliveryCredit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wuliangit.shopos.entity.EvaluateStore" >
    insert into t_evaluate_store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sevalId != null" >
        seval_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="descCredit != null" >
        desc_credit,
      </if>
      <if test="serviceCredit != null" >
        service_credit,
      </if>
      <if test="deliveryCredit != null" >
        delivery_credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sevalId != null" >
        #{sevalId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="descCredit != null" >
        #{descCredit,jdbcType=INTEGER},
      </if>
      <if test="serviceCredit != null" >
        #{serviceCredit,jdbcType=INTEGER},
      </if>
      <if test="deliveryCredit != null" >
        #{deliveryCredit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuliangit.shopos.entity.EvaluateStore" >
    update t_evaluate_store
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="descCredit != null" >
        desc_credit = #{descCredit,jdbcType=INTEGER},
      </if>
      <if test="serviceCredit != null" >
        service_credit = #{serviceCredit,jdbcType=INTEGER},
      </if>
      <if test="deliveryCredit != null" >
        delivery_credit = #{deliveryCredit,jdbcType=INTEGER},
      </if>
    </set>
    where seval_id = #{sevalId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuliangit.shopos.entity.EvaluateStore" >
    update t_evaluate_store
    set order_id = #{orderId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      desc_credit = #{descCredit,jdbcType=INTEGER},
      service_credit = #{serviceCredit,jdbcType=INTEGER},
      delivery_credit = #{deliveryCredit,jdbcType=INTEGER}
    where seval_id = #{sevalId,jdbcType=INTEGER}
  </update>
</mapper>