<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliangit.shopos.dao.GoodsMapper" >



    <!--管理员商品搜索-->
    <select id="search" resultType="com.wuliangit.shopos.entity.Goods">
        select * from t_goods
        <where>
            <if test="searchKey != null and searchKey != '' ">
                and ( name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or ad_word like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or store_name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%'))
            </if>
        </where>
        order by
        <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
            ${orderColumn} ${orderType}
        </if>
    </select>

    <!--店铺商品搜索-->
    <select id="StoreSearch" resultType="com.wuliangit.shopos.entity.Goods">
        select * from t_goods
        <where>
            store_id = #{storeId}
            <if test="searchKey != null and searchKey != '' ">
                and ( name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or ad_word like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or store_name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%'))
            </if>
        </where>
        order by
        <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
            ${orderColumn} ${orderType}
        </if>
    </select>

    <!--不包含商品详情的商品对象-->
    <select id="selectGoodsWithoutBodyByPrimaryKey" resultType="com.wuliangit.shopos.model.GoodsWithoutBody">
        select
        <include refid="Base_Column_List" />
        from t_goods
        where goods_id = #{goodsId,jdbcType=INTEGER}
    </select>

    <!--获取商品的简要信息-->
    <select id="getSimplGoodsInfo" resultType="com.wuliangit.shopos.dto.StoreGoodsDetailDTO">
        SELECT goods_id,name,unit,ad_word,price
        FROM t_goods
        WHERE goods_id = #{goodsId}
    </select>

    <!--通过店铺id获取店铺商品数量-->
    <select id="getGoodsCountByStoreId" resultType="java.lang.Integer">
        select count(*) from t_goods where store_id = #{storeId}
    </select>

    <!--接口获取商品详情-->
    <select id="apiGetGoodsDTOById" resultType="com.wuliangit.shopos.dto.api.ApiGoodsDTO">
        select * from t_goods where goods_id = #{goodsId}
    </select>

    <!--获取移动端可以编辑的商品-->
    <select id="sellerGetGoodsCanEdit" resultType="com.wuliangit.shopos.dto.api.ApiGoodsListDTO">
        select * from t_goods where store_id = #{storeId} and upload_from = 'PHONE'
    </select>

    <!--管理员查询所有商品信息-->
    <select id="adminGetGoodsSearch" resultType="com.wuliangit.shopos.entity.Goods">
        select * from t_goods
        <where>
            <if test="searchKey != null and searchKey != '' ">
                and ( name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or ad_word like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
                or store_name like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%'))
            </if>
        </where>
        order by
        <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
            ${orderColumn} ${orderType}
        </if>
    </select>
    <!--管理员得到商品详细信息-->
    <select id="adminGetGoodsDetail" resultType="com.wuliangit.shopos.dto.GoodsDetailDTO">
           select a.name,e.`name` as brandName, a.unit,a.carriage,a.commend,a.evaluation_count,a.evaluation_good_star,a.goods_body,a.images,a.type,a.is_new,a.is_platform,a.title_img,a.sell_time_begin,a.sell_time_end,a.price,a.store_name, b.name as goodsCategory1,c.name as goodsCategory2,d.name as goodsCategory3
             from t_goods a,t_goods_category b,t_goods_category c,t_goods_category d,t_brand e
          where a.goods_id=#{goodsId} and a.goods_category1_id=b.goods_category_id and a.goods_category2_id=c.goods_category_id and a.goods_category3_id=d.goods_category_id and a.brand_id=e.brand_id;

    </select>

    <!--更改商品状态-->
    <update id="updateGoodsApplyStatus">
      update t_goods set
        <if test="type == 0">check_msg = #{reason},verify = "NOT_PASS"</if>
        <if test="type == 1">verify = "PASS"</if>
        <if test="type == 2">commend = 1</if>
        <if test="type == 3">state = "DOWN"</if>
      where goods_id = #{goodsId}
    </update>
    <update id="updateGoodsOnshelfStatus">
        update t_goods set
        <if test="type == 0">state = "ONSELL"</if>
        <if test="type == 1">state = "DOWN"</if>
        where goods_id = #{goodsId};
    </update>

    <!--获取活动审核商品列表-->
    <select id="getActivityCheckGoodsList" resultType="com.wuliangit.shopos.dto.ActivityCheckGoodsDTO">
        SELECT g.goods_id,g.name,g.store_name,g.activity_price,a.activity_title
        FROM t_activity AS a , t_goods AS g
        <where>
            a.activity_id = g.activity_id AND g.activity_join_state = "CHECKING"
            <if test="searchKey != null and searchKey != '' ">
                AND a.activity_title like '%${searchKey}%'
            </if>
        </where>
        order by
        <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
            g.${orderColumn} ${orderType},
        </if>
        a.activity_start_time desc
    </select>
    <select id="getGoodsDetailIncludeActivity" resultType="com.wuliangit.shopos.dto.GoodsIncludeActivityDTO">
        select a.*,b.activity_title from t_goods a left join t_activity b on
        a.activity_id = b.activity_id where a.goods_id = #{goodsId};
    </select>

    <!--活动商品审核结果-->
    <update id="activityGoodsCheck">
        UPDATE t_goods
        SET activity_join_state = #{activityJoinState}
        WHERE goods_id = #{goodsId}
    </update>
</mapper>