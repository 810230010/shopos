<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliangit.shopos.dao.StoreMapper">

    <!--获取商家列表数据-->
    <select id="getStoreList" resultType="com.wuliangit.shopos.dto.StorePageListDTO">
        select store_id, name, state, create_time, type
        from t_store
        <where>
            state = "OPEN" OR state = "CLOSE"
            <if test="searchKey != null and searchKey != '' ">
                and ( name like '%${searchKey}%')
            </if>
        </where>
        order by
        <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
            ${orderColumn} ${orderType},
        </if>
        create_time desc
    </select>

    <!--更改商家状态-->
    <update id="updateStoreState">
        UPDATE t_store
        SET state = #{state}
        where store_id = #{storeId}
    </update>

    <!--获取商家详情-->
    <select id="getStoreDetailInfo" resultType="com.wuliangit.shopos.dto.StoreDetailDTO">
        select name,grade_id,member_id,type,store_company_name,address,state,create_time,banner,phone,credit,live_store_name,live_store_address
        from t_store
        where store_id = #{storeId}
    </select>

    <!--获取店铺简要信息-->
    <select id="getStoreMinByStoreId" resultType="com.wuliangit.shopos.model.StoreMin">
        select store_id, name, logo, type
        from t_store
        where store_id = #{storeId}
    </select>

    <!--接口搜索店铺-->
    <select id="apiStoreSearch" resultType="com.wuliangit.shopos.dto.ApiStoreListDTO">
        select store_id, name, type, logo, sales
        from t_store
        <where>
            state = "OPEN"
            <if test="searchKey != null and searchKey != '' ">
                and ( name like '%${searchKey}%')
            </if>
            <if test="type != null and type != '' ">
                and type = #{type}
            </if>
        </where>
        order by
        <choose>
            <when test="order != null and order !=''">
                ${order} desc
            </when>
            <otherwise>
                sales desc, desccredit desc, servicecredit desc, deliverycredit desc
            </otherwise>
        </choose>
    </select>
</mapper>