<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliangit.shopos.dao.StoreMessageMapper" >
  <resultMap id="BaseResultMap" type="com.wuliangit.shopos.entity.StoreMessage" >
    <id column="store_message_id" property="storeMessageId" jdbcType="INTEGER" />
    <result column="send_user" property="sendUser" jdbcType="INTEGER" />
    <result column="send_user_name" property="sendUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="receive_user" property="receiveUser" jdbcType="INTEGER" />
    <result column="receive_user_name" property="receiveUserName" jdbcType="VARCHAR" />
    <result column="read_flag" property="readFlag" jdbcType="TINYINT" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.wuliangit.shopos.entity.StoreMessage" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    store_message_id, send_user, send_user_name, create_time, receive_user, receive_user_name, 
    read_flag, del_flag, title
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_store_message
    where store_message_id = #{storeMessageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_store_message
    where store_message_id = #{storeMessageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wuliangit.shopos.entity.StoreMessage" >
    insert into t_store_message (store_message_id, send_user, send_user_name, 
      create_time, receive_user, receive_user_name, 
      read_flag, del_flag, title, 
      content)
    values (#{storeMessageId,jdbcType=INTEGER}, #{sendUser,jdbcType=INTEGER}, #{sendUserName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{receiveUser,jdbcType=INTEGER}, #{receiveUserName,jdbcType=VARCHAR}, 
      #{readFlag,jdbcType=TINYINT}, #{delFlag,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wuliangit.shopos.entity.StoreMessage" >
    insert into t_store_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeMessageId != null" >
        store_message_id,
      </if>
      <if test="sendUser != null" >
        send_user,
      </if>
      <if test="sendUserName != null" >
        send_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="receiveUser != null" >
        receive_user,
      </if>
      <if test="receiveUserName != null" >
        receive_user_name,
      </if>
      <if test="readFlag != null" >
        read_flag,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeMessageId != null" >
        #{storeMessageId,jdbcType=INTEGER},
      </if>
      <if test="sendUser != null" >
        #{sendUser,jdbcType=INTEGER},
      </if>
      <if test="sendUserName != null" >
        #{sendUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null" >
        #{receiveUser,jdbcType=INTEGER},
      </if>
      <if test="receiveUserName != null" >
        #{receiveUserName,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuliangit.shopos.entity.StoreMessage" >
    update t_store_message
    <set >
      <if test="sendUser != null" >
        send_user = #{sendUser,jdbcType=INTEGER},
      </if>
      <if test="sendUserName != null" >
        send_user_name = #{sendUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null" >
        receive_user = #{receiveUser,jdbcType=INTEGER},
      </if>
      <if test="receiveUserName != null" >
        receive_user_name = #{receiveUserName,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        read_flag = #{readFlag,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where store_message_id = #{storeMessageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wuliangit.shopos.entity.StoreMessage" >
    update t_store_message
    set send_user = #{sendUser,jdbcType=INTEGER},
      send_user_name = #{sendUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      receive_user = #{receiveUser,jdbcType=INTEGER},
      receive_user_name = #{receiveUserName,jdbcType=VARCHAR},
      read_flag = #{readFlag,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where store_message_id = #{storeMessageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuliangit.shopos.entity.StoreMessage" >
    update t_store_message
    set send_user = #{sendUser,jdbcType=INTEGER},
      send_user_name = #{sendUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      receive_user = #{receiveUser,jdbcType=INTEGER},
      receive_user_name = #{receiveUserName,jdbcType=VARCHAR},
      read_flag = #{readFlag,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR}
    where store_message_id = #{storeMessageId,jdbcType=INTEGER}
  </update>
</mapper>