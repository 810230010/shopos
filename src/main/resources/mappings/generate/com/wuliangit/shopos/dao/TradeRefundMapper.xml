<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliangit.shopos.dao.TradeRefundMapper" >
  <resultMap id="BaseResultMap" type="com.wuliangit.shopos.entity.TradeRefund" >
    <id column="trade_refund_id" property="tradeRefundId" jdbcType="INTEGER" />
    <result column="out_request_no" property="outRequestNo" jdbcType="VARCHAR" />
    <result column="payment_code" property="paymentCode" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    trade_refund_id, out_request_no, payment_code, amount, order_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_trade_refund
    where trade_refund_id = #{tradeRefundId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_trade_refund
    where trade_refund_id = #{tradeRefundId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wuliangit.shopos.entity.TradeRefund" >
    <selectKey resultType="java.lang.Integer" keyProperty="tradeRefundId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_trade_refund (out_request_no, payment_code, amount, 
      order_id, create_time)
    values (#{outRequestNo,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{orderId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wuliangit.shopos.entity.TradeRefund" >
    <selectKey resultType="java.lang.Integer" keyProperty="tradeRefundId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_trade_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outRequestNo != null" >
        out_request_no,
      </if>
      <if test="paymentCode != null" >
        payment_code,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outRequestNo != null" >
        #{outRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null" >
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuliangit.shopos.entity.TradeRefund" >
    update t_trade_refund
    <set >
      <if test="outRequestNo != null" >
        out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null" >
        payment_code = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where trade_refund_id = #{tradeRefundId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuliangit.shopos.entity.TradeRefund" >
    update t_trade_refund
    set out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      order_id = #{orderId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where trade_refund_id = #{tradeRefundId,jdbcType=INTEGER}
  </update>
</mapper>