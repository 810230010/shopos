<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

    <!-- 开启controller注解支持 -->
    <context:component-scan base-package="com.wuliangit.shopos.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!--<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>-->
    </context:component-scan>

    <!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

    <aop:config proxy-target-class="true"/>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/assets/**" location="/WEB-INF/assets/" />

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 解决中文乱码，将返回值全部设置成utf8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.wuliangit.shopos.common.util.ObjectMappingCustomer"></bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--线程安全的访问session-->
        <property name="synchronizeOnSession" value="true"/>
        <property name="customArgumentResolvers">
            <list>
                <bean class="com.wuliangit.shopos.common.spring.mvc.method.annotation.RequestJsonParamMethodArgumentResolver"/>
            </list>
        </property>
    </bean>

    <!--拦截器-->
    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean id="sysInterceptor" class="com.wuliangit.shopos.common.filter.SysInterceptor"/>
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/test/number.do"/>-->
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <!--<bean id="sysInterceptor" class="com.alaban.filter.SysInterceptor"/>-->
        <!--</mvc:interceptor>-->
    </mvc:interceptors>


    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760000"></property>
        <property name="maxInMemorySize" value="40960"></property>
    </bean>

    <!--<bean class="com.alaban.controller.admin.CorsConfigurerAdapter"/>-->

    <mvc:cors>
        <mvc:mapping path="/**" allowed-origins="*" allow-credentials="true" max-age="1800" allowed-methods="GET,POST,OPTIONS"/>
    </mvc:cors>

    <!-- velocity 配置   -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views/"/>
        <property name="configLocation" value="classpath:velocity.properties"/>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="suffix" value=".vm"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="dateToolAttribute" value="date"/>
        <property name="numberToolAttribute" value="number"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/classes/velocity-toolbox.xml" />
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>
