<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:shopos.properties"/>

    <!-- 开启AOP监听 只对当前配置文件有效 -->
    <aop:aspectj-autoproxy expose-proxy="true"/>

    <!-- ehcache缓存管理器 -->
    <bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>

    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>

    <bean id="cacheManager" class="com.wuliangit.shopos.common.cache.SpringCacheManager">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

    <!-- 凭证匹配器 处理重复登录失败 -->
    <!--<bean id="credentialsMatcher" class="com.wuliangit.shopos.common.shiro.RetryLimitHashedCredentialsMatcher">-->
        <!--<constructor-arg ref="cacheManager"/>-->
        <!--<property name="hashAlgorithmName" value="${password.algorithmName}"/>-->
        <!--<property name="hashIterations" value="${password.hashIterations}"/>-->
        <!--<property name="storedCredentialsHexEncoded" value="true"/>-->
    <!--</bean>-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--<constructor-arg ref="cacheManager"/>-->
        <property name="hashAlgorithmName" value="${password.algorithmName}"/>
        <property name="hashIterations" value="${password.hashIterations}"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="com.wuliangit.shopos.common.shiro.OnlineCookie">
        <constructor-arg value="token"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="com.wuliangit.shopos.common.shiro.OnlineCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <bean id="sessionFactory" class="com.wuliangit.shopos.common.shiro.mgt.OnlineSessionFactory"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 86400000 milliseconds = 24 hours -->
        <property name="globalSessionTimeout" value="86400000"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionFactory" ref="sessionFactory"/>

        <!--默认会话验证调度器-->
        <property name="sessionValidationInterval" value="86400000"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->

        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话验证调度器 定期的验证会话是否已过期-->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>



    <!-- Subject工厂 -->
    <bean id="subjectFactory" class="com.wuliangit.shopos.common.shiro.mgt.StatelessAndOnlineWebSubjectFactory">
        <property name="statelessUrl">
            <list>
                <value>/api/**</value>
            </list>
        </property>
    </bean>


    <!--店铺reaml-->
    <bean id="storeRealm" class="com.wuliangit.shopos.common.shiro.realm.StoreRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!--会员reaml-->
    <bean id="adminRealm" class="com.wuliangit.shopos.common.shiro.realm.AdminRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.wuliangit.shopos.common.shiro.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!--当有多个realm的时候可以配置realm的authentic匹配方案，-->
    <bean id="authenticator" class="com.wuliangit.shopos.common.shiro.realm.CustomizedModularRealmAuthenticator">
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
        </property>
    </bean>
    <!--当有多个realm的时候可以配置realm的authorizer匹配方案，-->
    <bean id="authorizer" class="com.wuliangit.shopos.common.shiro.realm.CustomizedModularRealmAuthorizer">
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 这个对象一定要放在reamls前 -->
        <!--<property name="authorizer" ref="authorizer"/>-->
        <!--<property name="authenticator" ref="authenticator"/>-->
        <property name="realms">
            <list>
                <!--<ref bean="adminRealm"/>-->
                <ref bean="userRealm"/>
                <!--<ref bean="storeRealm"/>-->
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="subjectFactory" ref="subjectFactory"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="kickoutSessionControlFilter" class="com.wuliangit.shopos.common.shiro.filter.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/admin/login"/>
    </bean>

    <!--总后台拦截器-->
    <bean id="adminFilter" class="com.wuliangit.shopos.common.shiro.filter.AdminFilter">
        <property name="loginUrl" value="/admin/login"/>
    </bean>

    <!--店铺拦截器-->
    <bean id="storeFilter" class="com.wuliangit.shopos.common.shiro.filter.StoreFilter">
        <property name="loginUrl" value="/store/login"/>
    </bean>

    <!--后台管理员和店铺公共拦截器-->
    <bean id="dashFilter" class="com.wuliangit.shopos.common.shiro.filter.DashFilter">
    </bean>

    <bean id="tokenManager" class="com.wuliangit.shopos.common.shiro.token.EhcacheTokenManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="tokenCache"/>
    </bean>

    <bean id="weixinFilter" class="com.wuliangit.shopos.common.shiro.filter.WeixinFilter">
        <property name="tokenManager" ref="tokenManager"/>
    </bean>
    <bean id="apiFilter" class="com.wuliangit.shopos.common.shiro.filter.ApiFilter">
        <property name="tokenManager" ref="tokenManager"/>
    </bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/admin/login"/>
    </bean>

    <bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">
        <property name="port" value="8443"/>
    </bean>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="com.wuliangit.shopos.common.shiro.MyShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/admin/login"/>
        <property name="filters">
            <util:map>
                <entry key="sysUser" value-ref="adminFilter"/>
                <entry key="storeUser" value-ref="storeFilter"/>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="weixin" value-ref="weixinFilter"/>
                <entry key="api" value-ref="apiFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!--静态资源-->
                /assets/** = anon

                <!--测试-->
                /test/** = anon

                <!--接口api-->
                /api/v1/member/login = anon
                /api/v1/member/logout = anon
                /api/v1/member/register/getCode = anon
                /api/v1/member/register/codeCheck = anon
                /api/v1/member/register = anon
                /api/v1/public/** = anon
                /api/** = api

                <!--总后台用户-->
                /admin/login = authc
                /admin/logout = logout
                /admin/** = kickout,sysUser

                <!--店铺后台用户-->
                <!--/store/login = authc-->
                <!--/store/logout = logout-->
                /store/** = storeUser
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


</beans>
