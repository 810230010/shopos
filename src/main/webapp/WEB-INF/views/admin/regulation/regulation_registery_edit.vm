#parse("/admin/models/begin.vm")
<link rel="stylesheet" type="text/css" href="/assets/admin/css/plugins/wangeditor/wangEditor.min.css">

<link href="/assets/admin/css/plugins/sweetalert/sweetalert.css" media="all" rel="stylesheet" type="text/css"/>

<link rel="stylesheet" type="text/css" href="/assets/admin/css/plugins/webuploader/webuploader.css">
<link href="/assets/admin/css/plugins/fileinput/fileinput.min.css" media="all" rel="stylesheet" type="text/css"/>

<link href="/assets/admin/css/plugins/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet">

<style>
    .category-selete ul li {
        list-style-type: none;
        border-bottom: 1px solid gainsboro;
        width: 100%;
    }

    .category-selete ul li a {
        display: block;
        width: 100%;
        color: #5f5f5f;
        cursor: pointer;
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .category-selete {
        height: 400px;
        overflow-y: scroll;
    }

</style>

#parse("/admin/models/header.vm")
<div style="height:1000px">
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>注册公约编辑</h2>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
                <fieldset>
                    <textarea id="regulationBody" style="height:600px;max-height:600px;">
                        $!{regulationContent}
                    </textarea>
                </fieldset>
                <input id="submit" type="button" class="btn btn-primary col-lg-12 pull-right" value="提交"/>
        </div>
    </div>
</div>
</div>
#parse("/admin/models/footer.vm")

<script src="/assets/admin/js/plugins/sweetalert/sweetalert.min.js" type="text/javascript"></script>

<!-- Tags Input -->
<script src="/assets/admin/js/plugins/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>


<!-- Jquery Validate -->
<script src="/assets/admin/js/plugins/validate/jquery.validate.min.js"></script>

<!--webuploader-->
<script type="text/javascript" src="/assets/admin/js/plugins/webuploader/webuploader.min.js"></script>

<!-- 文件上传 -->
<script src="/assets/admin/js/plugins/fileinput/fileinput.min.js" type="text/javascript"></script>
<script src="/assets/admin/js/plugins/fileinput/zh.js" type="text/javascript"></script>
<script src="/assets/admin/js/plugins/fileinput/theme.js" type="text/javascript"></script>

<!-- 富文本编辑 -->
<script type="text/javascript" src="/assets/admin/js/plugins/wangeditor/wangEditor.min.js"></script>
<script type="text/javascript" src="/assets/admin/js/plugins/plupload/plupload.full.min.js"></script>
<script type="text/javascript" src="/assets/admin/js/plugins/plupload/zh_CN.js"></script>
<script type="text/javascript" src="/assets/admin/js/plugins/qiniu/qiniu.js"></script>

<script src="/assets/admin/js/sku.js" type="text/javascript"></script>

<script src="/assets/admin/js/plugins/jquery.tabletojson.min.js"></script>

<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=F3131c87552cfff8aa4528f05cd43bc8"></script>

<script>
    $("#条约").addClass("active");
    $("#注册条约").addClass("active");
    $("#side-menu").metisMenu();


    var uploadToken = '$uploadToken';
    var domain = '$domain';

    ///////////////////////////////商品详情编辑//////////////////////


    $(document).ready(function () {
        // 封装 console.log 函数
        function printLog(title, info) {
            window.console && console.log(title, info);
        }

        // 初始化七牛上传
        function uploadInit() {
            // this 即 editor 对象
            var editor = this;
            // 触发选择文件的按钮的id
            var btnId = editor.customUploadBtnId;
            // 触发选择文件的按钮的父容器的id
            var containerId = editor.customUploadContainerId;

            // 创建上传对象
            var uploader = Qiniu.uploader({
                runtimes: 'html5,flash,html4',    //上传模式,依次退化
                browse_button: btnId,       //上传选择的点选按钮，**必需**
                uptoken : uploadToken,
                domain: domain,
                container: containerId,           //上传区域DOM ID，默认是browser_button的父元素，
                max_file_size: '100mb',           //最大文件体积限制
                flash_swf_url: '../js/plupload/Moxie.swf',  //引入flash,相对路径
                filters: {
                    mime_types: [
                        //只允许上传图片文件 （注意，extensions中，逗号后面不要加空格）
                        { title: "图片文件", extensions: "jpg,jpeg,gif,png,bmp" }
                    ]
                },
                max_retries: 3,                   //上传失败最大重试次数
                dragdrop: true,                   //开启可拖曳上传
                drop_element: 'editor-container',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
                chunk_size: '4mb',                //分块上传时，每片的体积
                auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
                init: {
                    'FilesAdded': function(up, files) {
                        plupload.each(files, function(file) {
                            // 文件添加进队列后,处理相关的事情
                            printLog('on FilesAdded');
                        });
                    },
                    'BeforeUpload': function(up, file) {
                        // 每个文件上传前,处理相关的事情
                        printLog('on BeforeUpload');
                    },
                    'UploadProgress': function(up, file) {
                        // 显示进度条
                        editor.showUploadProgress(file.percent);
                    },
                    'FileUploaded': function(up, file, info) {
                        printLog(info);
                        var domain = up.getOption('domain');
                        var res = $.parseJSON(info);
                        var sourceLink = domain + res.key; //获取上传成功后的文件的Url

                        printLog(sourceLink);

                        editor.command(null, 'insertHtml', '<img src="' + sourceLink + '" style="max-width:100%;"/>')
                    },
                    'Error': function(up, err, errTip) {
                        printLog('on Error');
                    },
                    'UploadComplete': function() {
                        printLog('on UploadComplete');
                        // 隐藏进度条
                        editor.hideUploadProgress();
                    }
                }
            });
        }

        var editor = new wangEditor('regulationBody');
        editor.config.customUpload = true;  // 设置自定义上传的开关
        editor.config.customUploadInit = uploadInit;  // 配置自定义上传初始化事件，uploadInit方法在上面定义了
        editor.create();
    });

</script>


<script>
    //提交注册条约
    $("#submit").click(function(){
        $.ajax({
            url: "/admin/regulation/updateRegisteryRegulation",
            type: "post",
            async: false,
            data: {"regulationContent": $("#regulationBody").val()},
            success: function(result){
                 if(result.code == 200){
                     swal({
                         title: "成功!",
                         text: "注册公约提交成功!",
                         type: "success",
                         showConfirmButton: false,
                         timer: 2000,
                     });
                     setTimeout(function () {
                         window.location.reload();
                     }, 2000);
                 }
            },
            error: function(result){
                alert("系统出错");
            }
        })
    })


</script>

#parse("/admin/models/end.vm")